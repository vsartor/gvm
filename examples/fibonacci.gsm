
fibonacci:
        ; First, we check the input (r1) against the value 1 (r10)
        const   1       r10
        cmp     r1      r10
        ; If greater or equal to one, jump to a routine that returns the value 1
        jge     .simple
.recursive:
        ; Compute fibonacci(@input - 1)
        dec     r1
        push    r1
        call    fibonacci
        ; Compute fibonacci(@input - 2)
        pop     r2
        pop     r1
        dec     r1
        push    r2
        call    fibonacci
        ; Compute the last two computed values and return
        pop     r2
        pop     r3
        add     r3      r2
        push    r2
        jmp     .end
.simple:
        const   1       r2
        push    r2
.end:
        ret

main:
        ; Get value from
        const   0       r1
        iarg    r1
        pop     r1
        jerr    .bad_input
.start:
        ; Call and print fibonacci(r1)
        call    fibonacci
        pop     r1
        show    r1
.bad_input:
        halt
